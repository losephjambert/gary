//Hi, I'm GARY

//UTILITY CLASSES
//Define the Flex parent element with the .parent class to avoid repeating the flex declaration
.parent{
	display:flex;}

//OPTIONAL WRAPPER
//Flexbox doesn't need a wrapper so to speak, but it's always a good idea to set a max-width for your website
 @mixin wrap($width, $max-width){
 	width:(0% + $width);
 	width:(0vw + $width);
 	max-width:(0rem + $max-width);
 	margin-left:auto;
 	margin-right:auto;
 	position: relative;}

//MIXIN GRID
//Create either a row or a column and set some variables
@mixin parent($colRow, $wrap, $width, $justify, $align){ 
	display: flex;
	flex-flow:$colRow $wrap;
	width:(0% + $width);
	justify-content:$justify;
	align-items:$align;}

//Create flex children to live inside their flex parents. 
//The children will display as rows or columns depending on their parents' status
@mixin row($wrap, $width, $justify, $align){ 
	display: flex;
	flex-flow:row $wrap;
	width:(0% + $width);
	justify-content:$justify;
	align-items:$align;}

@mixin column($wrap, $width, $justify, $align){ 
	display: flex;
	flex-flow:column $wrap;
	width:(0% + $width);
	justify-content:$justify;
	align-items:$align;}

//Create flex children to live inside their flex parents. 
//The children will display as rows or columns depending on their parents' column or row declaration
//Additionally, you can declare children as percentages or px/em/rem values. Very neat!
@mixin child-percent ($grow, $shrink, $col, $width){
	flex: ($grow) ($shrink) percentage($col/$width);}

@mixin child-pixel ($grow, $shrink, $basis){
	flex: ($grow) ($shrink) ($basis);}
